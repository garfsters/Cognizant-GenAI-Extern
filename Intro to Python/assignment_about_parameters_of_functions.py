# -*- coding: utf-8 -*-
"""Assignment About Parameters of Functions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lLpJtYojEZ-lTqdMIu-ZbyfzkMyQDj2i

# Assignment: About Parameters of Functions
## Author: Serenity Smith
## [Link to Colab](https://colab.research.google.com/drive/1lLpJtYojEZ-lTqdMIu-ZbyfzkMyQDj2i?usp=sharing)
"""

'''
Task 1 - Writing Functions
Create a function greet_user that accepts a name as a parameter and prints a personalized greeting.
Then, write another function add_numbers that takes two numbers as parameters, adds them, and returns the result.

Example Output:

plaintext
Copy code
Hello, Alice! Welcome aboard. The sum of 5 and 10 is 15.



Task 2 - Using Default Parameters
Create a function describe_pet that accepts two parameters:

pet_name (string)
animal_type (string, default value is "dog").
The function should print a description of the pet.

Example Output:

plaintext
Copy code
I have a dog named Buddy. I have a cat named Whiskers.



Task 3 - Functions with Variable Arguments
Write a function make_sandwich that accepts a variable number of arguments for sandwich ingredients and prints them as a list.

Example Output:

plaintext
Copy code
Making a sandwich with the following ingredients: - Lettuce - Tomato - Cheese



Task 4 - Understanding Recursion
Write a recursive function factorial to calculate the factorial of a number.
Then, write another recursive function fibonacci to calculate the nth number in the Fibonacci sequence.

Example Output:

plaintext
Copy code
Factorial of 5 is 120. The 6th Fibonacci number is 8.
'''

# Task 1

def add_numbers(a, b):
  return a + b
add_numbers(5, 10)

def greet_user(name):
  print(f"Hello, {name}! Welcome aboard. The sum of 5 and 10 is {add_numbers(5, 10)}.")

greet_user('Serenity')

# Task 2
def describe_pet(pet_name, animal_type="dog"):
  return f"I have a {animal_type} named {pet_name}."

describe_pet("Prince", "cat")

# Task 3

def make_sandwich(*ingredients):
  print(f"Making a sandwich with the following ingredients: {ingredients}.")

make_sandwich("lettuce", "tomato", "cheese")

# Task 4

def factorial(n):
  if n == 1:
    return 1
  elif n > 1:
    return n * factorial(n-1)
  else:
    return "Impossible. Try a positive number."
print(factorial(6))

def fibonacci(n):
  if n <= 0:
    return []
  elif n == 1:
    return[0]
  else:
    fib = [0,1]
    while len(fib) < n:
      next = fib[-1] + fib[-2]
      fib.append(next)
    return fib

fibonacci(10)